{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAe/B,OAbgB,IAAIC,SAAQ,CAACC,EAASC,KAEpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAdAO,SAASC,cAAc,SAoB/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEFC,QAAQC,IAAIH,EAAII,cAAcd,MAAMe,OACpCH,QAAQC,IAAIH,EAAII,cAAcE,KAAKD,OACnCH,QAAQC,IAAIH,EAAII,cAAcG,OAAOF,OAErC,IAAIG,EAAaC,OAAOT,EAAII,cAAcd,MAAMe,OAC5CK,EAAYD,OAAOT,EAAII,cAAcE,KAAKD,OAC1CE,EAASE,OAAOT,EAAII,cAAcG,OAAOF,OAG7C,IAAK,IAAIM,EAAI,EAAGA,EAAIJ,EAAQI,GAAK,EAC/BvB,EAAc,EAAIuB,EAAGH,EAAaG,EAAID,GAC/BE,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MAEfuB,EAAA3B,GAAS4B,OAAOC,QAChB,uBAAqB1B,QAAiBC,MAAU,IAGnD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAEhBuB,EAAA3B,GAAS4B,OAAOG,QAChB,sBAAoB5B,QAAeC,MAAU,IAKzDU,EAAII,cAAcc,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n\n  const promise = new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nform.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  \n    console.log(evt.currentTarget.delay.value)\n    console.log(evt.currentTarget.step.value)\n    console.log(evt.currentTarget.amount.value)\n\n    let firstDelay = Number(evt.currentTarget.delay.value);\n    let delayStep = Number(evt.currentTarget.step.value);\n    let amount = Number(evt.currentTarget.amount.value);\n  \n\n    for (let i = 0; i < amount; i += 1) {\n      createPromise(1 + i, firstDelay + i * delayStep)\n            .then(({ position, delay }) => {\n                \n                Notiflix.Notify.success(\n                `✅ Fulfilled promise ${position} in ${delay}ms`\n                );\n            })\n            .catch(({ position, delay }) => {\n                \n                Notiflix.Notify.failure(\n                `❌ Rejected promise ${position} in ${delay}ms`\n                );\n            });\n      \n    }\n    evt.currentTarget.reset();\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","evt","preventDefault","console","log","currentTarget","value","step","amount","firstDelay","Number","delayStep","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.297e2944.js.map"}