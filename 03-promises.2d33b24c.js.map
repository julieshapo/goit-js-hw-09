{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAe/B,OAbgB,IAAIC,SAAQ,CAACC,EAASC,KAEpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAdAO,SAASC,cAAc,SAoB/BC,iBAAiB,UAEtB,SAAsBC,GAClBA,EAAIC,iBAMJ,IAAIC,EAAYF,EAAIG,cAAcC,KAAKC,MACnCC,EAASN,EAAIG,cAAcG,OAAOD,MAGtC,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCnB,EAAcmB,EAAGL,EAAYK,GACtBC,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MAEfmB,EAAAvB,GAASwB,OAAOC,QAChB,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAEhBmB,EAAAvB,GAASwB,OAAOG,QAChB,sBAAoBxB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n\n  const promise = new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nform.addEventListener('submit', onFormSubmit) \n\nfunction onFormSubmit(evt) {\n    evt.preventDefault();\n    // console.log(evt.currentTarget.delay.value)\n    // console.log(evt.currentTarget.step.value)\n    // console.log(evt.currentTarget.amount.value)\n\n    // let firstDelay = evt.currentTarget.delay.value;\n    let delayStep = evt.currentTarget.step.value;\n    let amount = evt.currentTarget.amount.value;\n  \n\n    for (let i = 1; i <= amount; i += 1) {\n      createPromise(i, delayStep * i)\n            .then(({ position, delay }) => {\n                \n                Notiflix.Notify.success(\n                `✅ Fulfilled promise ${position} in ${delay}ms`\n                );\n            })\n            .catch(({ position, delay }) => {\n                \n                Notiflix.Notify.failure(\n                `❌ Rejected promise ${position} in ${delay}ms`\n                );\n            });\n      \n    }\n    // evt.currentTarget.reset();\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","evt","preventDefault","delayStep","currentTarget","step","value","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.2d33b24c.js.map"}